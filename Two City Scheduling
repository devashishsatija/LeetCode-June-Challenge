//There are 2N people a company is planning to interview. The cost of flying the i-th person to city A is costs[i][0], and the cost of flying the i-th person to city B is costs[i][1].

//Return the minimum cost to fly every person to a city such that exactly N people arrive in each city.


class Solution {
    public int twoCitySchedCost(int[][] costs) {
        Comparator<int[]> comparator = (a, b) -> (a[0] - a[1]) - (b[0] - b[1]) ;
        Arrays.sort(costs, comparator);
        //int countA = 0;
        //int countB =0;
        int sum =0;
        int N = costs.length;
        /* for(int i=0;i<costs.length;i++)
        {
            System.out.println(costs[i][0] + " " +costs[i][1]);
         }*/
        
        for(int i=0;i<costs.length;i++)
        {
            if(i<N/2)
                sum+=costs[i][0];
            else
                sum+=costs[i][1];
        }
        return sum;
    }
}
